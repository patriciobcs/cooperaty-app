{"ast":null,"code":"var _jsxFileName = \"/mnt/c/users/gianni/desktop/cooperaty-app - copia/src/components/TopBar.tsx\";\nimport { Menu } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/Cooperaty_Logo1.png';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport { getTradePageUrl } from '../utils/markets';\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #1ce6d2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://docs.projectserum.com/trade-on-serum-dex/trade-on-serum-dex-1',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://solscan.io',\n  '/srm-faq': 'https://projectserum.com/srm-faq'\n};\nexport default function TopBar() {\n  const {\n    connected,\n    wallet\n  } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n  const handleClick = useCallback(e => {\n    if (!(e.key in EXTERNAL_LINKS)) {\n      history.push(e.key);\n    }\n  }, [history]);\n\n  const onAddCustomEndpoint = info => {\n    const existingEndpoint = availableEndpoints.some(e => e.endpoint === info.endpoint);\n\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error'\n      });\n      return;\n    }\n\n    const handleError = e => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error'\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection.getEpochInfo().then(result => {\n        setTestingConnection(true);\n        console.log(`testing connection to ${info.endpoint}`);\n        const newCustomEndpoints = [...availableEndpoints.filter(e => e.custom), info];\n        setEndpoint(info.endpoint);\n        setCustomEndpoints(newCustomEndpoints);\n      }).catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n  const tradePageUrl = location.pathname.startsWith('/market/') ? location.pathname : getTradePageUrl();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomClusterEndpointDialog, {\n    visible: addEndpointVisible,\n    testingConnection: testingConnection,\n    onAddCustomEndpoint: onAddCustomEndpoint,\n    onClose: () => setAddEndpointVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LogoWrapper, {\n    onClick: () => history.push(tradePageUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), 'COOPERATY'), /*#__PURE__*/React.createElement(Menu, {\n    mode: \"horizontal\",\n    onClick: handleClick,\n    selectedKeys: [location.pathname],\n    style: {\n      borderBottom: 'none',\n      backgroundColor: 'transparent',\n      display: 'flex',\n      alignItems: 'flex-end',\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WalletConnect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/mnt/c/users/gianni/desktop/cooperaty-app - copia/src/components/TopBar.tsx"],"names":["Menu","React","useCallback","useEffect","useState","useHistory","useLocation","logo","styled","useWallet","ENDPOINTS","useConnectionConfig","CustomClusterEndpointDialog","notify","Connection","WalletConnect","getTradePageUrl","Wrapper","div","LogoWrapper","EXTERNAL_LINKS","TopBar","connected","wallet","endpoint","endpointInfo","setEndpoint","availableEndpoints","setCustomEndpoints","addEndpointVisible","setAddEndpointVisible","testingConnection","setTestingConnection","location","history","searchFocussed","setSearchFocussed","handleClick","e","key","push","onAddCustomEndpoint","info","existingEndpoint","some","message","type","handleError","console","log","connection","getEpochInfo","then","result","newCustomEndpoints","filter","custom","catch","endpointInfoCustom","handler","window","addEventListener","removeEventListener","tradePageUrl","pathname","startsWith","borderBottom","backgroundColor","display","alignItems","flex"],"mappings":"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","sourcesContent":["import { Button, Col, Menu, Popover, Row, Select } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport logo from '../assets/Cooperaty_Logo1.png';\nimport styled from 'styled-components';\nimport { useWallet } from '../utils/wallet';\nimport { ENDPOINTS, useConnectionConfig } from '../utils/connection';\nimport CustomClusterEndpointDialog from './CustomClusterEndpointDialog';\nimport { EndpointInfo } from '../utils/types';\nimport { notify } from '../utils/notifications';\nimport { Connection } from '@solana/web3.js';\nimport WalletConnect from './WalletConnect';\nimport { getTradePageUrl } from '../utils/markets';\n\nconst Wrapper = styled.div`\n  background-color: #0d1017;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  padding: 0px 30px;\n  flex-wrap: wrap;\n`;\nconst LogoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  color: #1ce6d2;\n  font-weight: bold;\n  cursor: pointer;\n  img {\n    height: 30px;\n    margin-right: 8px;\n  }\n`;\n\nconst EXTERNAL_LINKS = {\n  '/learn': 'https://docs.projectserum.com/trade-on-serum-dex/trade-on-serum-dex-1',\n  '/add-market': 'https://serum-academy.com/en/add-market/',\n  '/wallet-support': 'https://serum-academy.com/en/wallet-support',\n  '/dex-list': 'https://serum-academy.com/en/dex-list/',\n  '/developer-resources': 'https://serum-academy.com/en/developer-resources/',\n  '/explorer': 'https://solscan.io',\n  '/srm-faq': 'https://projectserum.com/srm-faq',\n};\n\nexport default function TopBar() {\n  const { connected, wallet } = useWallet();\n  const {\n    endpoint,\n    endpointInfo,\n    setEndpoint,\n    availableEndpoints,\n    setCustomEndpoints,\n  } = useConnectionConfig();\n  const [addEndpointVisible, setAddEndpointVisible] = useState(false);\n  const [testingConnection, setTestingConnection] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const [searchFocussed, setSearchFocussed] = useState(false);\n\n  const handleClick = useCallback(\n    (e) => {\n      if (!(e.key in EXTERNAL_LINKS)) {\n        history.push(e.key);\n      }\n    },\n    [history],\n  );\n\n  const onAddCustomEndpoint = (info: EndpointInfo) => {\n    const existingEndpoint = availableEndpoints.some(\n      (e) => e.endpoint === info.endpoint,\n    );\n    if (existingEndpoint) {\n      notify({\n        message: `An endpoint with the given url already exists`,\n        type: 'error',\n      });\n      return;\n    }\n\n    const handleError = (e) => {\n      console.log(`Connection to ${info.endpoint} failed: ${e}`);\n      notify({\n        message: `Failed to connect to ${info.endpoint}`,\n        type: 'error',\n      });\n    };\n\n    try {\n      const connection = new Connection(info.endpoint, 'recent');\n      connection\n        .getEpochInfo()\n        .then((result) => {\n          setTestingConnection(true);\n          console.log(`testing connection to ${info.endpoint}`);\n          const newCustomEndpoints = [\n            ...availableEndpoints.filter((e) => e.custom),\n            info,\n          ];\n          setEndpoint(info.endpoint);\n          setCustomEndpoints(newCustomEndpoints);\n        })\n        .catch(handleError);\n    } catch (e) {\n      handleError(e);\n    } finally {\n      setTestingConnection(false);\n    }\n  };\n\n  const endpointInfoCustom = endpointInfo && endpointInfo.custom;\n  useEffect(() => {\n    const handler = () => {\n      if (endpointInfoCustom) {\n        setEndpoint(ENDPOINTS[0].endpoint);\n      }\n    };\n    window.addEventListener('beforeunload', handler);\n    return () => window.removeEventListener('beforeunload', handler);\n  }, [endpointInfoCustom, setEndpoint]);\n\n  const tradePageUrl = location.pathname.startsWith('/market/')\n    ? location.pathname\n    : getTradePageUrl();\n\n  return (\n    <>\n      <CustomClusterEndpointDialog\n        visible={addEndpointVisible}\n        testingConnection={testingConnection}\n        onAddCustomEndpoint={onAddCustomEndpoint}\n        onClose={() => setAddEndpointVisible(false)}\n      />\n      <Wrapper>\n        <LogoWrapper onClick={() => history.push(tradePageUrl)}>\n          <img src={logo} alt=\"\" />\n          {'COOPERATY'}\n        </LogoWrapper>\n        <Menu\n          mode=\"horizontal\"\n          onClick={handleClick}\n          selectedKeys={[location.pathname]}\n          style={{\n            borderBottom: 'none',\n            backgroundColor: 'transparent',\n            display: 'flex',\n            alignItems: 'flex-end',\n            flex: 1,\n          }}\n        >\n        </Menu>\n        <div>\n          <WalletConnect />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}