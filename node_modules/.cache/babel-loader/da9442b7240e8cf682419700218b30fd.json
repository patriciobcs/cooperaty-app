{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Gianni/Desktop/serum-dex-ui/src/components/UserInfoTable/FeesTable.js\";\nimport React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n  const columns = [{\n    title: 'Fee Tier',\n    dataIndex: 'feeTier',\n    key: 'feeTier',\n    render: (feeTier, row) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, feeTier), row.index === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tag, {\n      color: '#41C77A',\n      style: {\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }\n    }, \"Selected\")) : null)\n  }, {\n    title: 'Taker',\n    dataIndex: 'taker',\n    key: 'taker',\n    render: (feeTier, row) => percentFormat.format(getFeeRates(row.feeTier).taker)\n  }, {\n    title: 'Maker',\n    dataIndex: 'maker',\n    key: 'maker',\n    render: (feeTier, row) => percentFormat.format(getFeeRates(row.feeTier).maker)\n  }, {\n    title: `Public Key`,\n    dataIndex: 'pubkey',\n    key: 'pubkey',\n    render: pubkey => pubkey.toBase58()\n  }, {\n    title: `Balance`,\n    dataIndex: 'balance',\n    key: 'balance'\n  }, {\n    title: `Mint`,\n    dataIndex: 'mint',\n    key: 'mint',\n    render: (_, row) => row.mint.equals(TokenInstructions.SRM_MINT) ? 'SRM' : row.mint.equals(TokenInstructions.MSRM_MINT) ? 'MSRM' : 'UNKNOWN'\n  }];\n  const dataSource = (feeAccounts || []).map((account, index) => ({ ...account,\n    index,\n    key: account.pubkey.toBase58()\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    dataSource: dataSource,\n    columns: columns,\n    pagination: true,\n    pageSize: 5,\n    emptyLabel: \"No (M)SRM accounts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Holding SRM or MSRM makes you eligible for fee discounts:\"), /*#__PURE__*/React.createElement(FeeScheduleTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [{\n    feeTier: 0,\n    taker: 0.0022,\n    maker: -0.0003,\n    token: '',\n    balance: ''\n  }, {\n    feeTier: 1,\n    taker: 0.002,\n    maker: -0.0003,\n    token: 'SRM',\n    balance: 100\n  }, {\n    feeTier: 2,\n    taker: 0.0018,\n    maker: -0.0003,\n    token: 'SRM',\n    balance: 1000\n  }, {\n    feeTier: 3,\n    taker: 0.0016,\n    maker: -0.0003,\n    token: 'SRM',\n    balance: 10000\n  }, {\n    feeTier: 4,\n    taker: 0.0014,\n    maker: -0.0003,\n    token: 'SRM',\n    balance: 100000\n  }, {\n    feeTier: 5,\n    taker: 0.0012,\n    maker: -0.0003,\n    token: 'SRM',\n    balance: 1000000\n  }, {\n    feeTier: 6,\n    taker: 0.001,\n    maker: -0.0005,\n    token: 'MSRM',\n    balance: 1\n  }];\n  const columns = [{\n    title: 'Fee Tier',\n    dataIndex: 'feeTier',\n    key: 'feeTier'\n  }, {\n    title: 'Taker',\n    dataIndex: 'taker',\n    key: 'taker',\n    render: (feeTier, row) => percentFormat.format(getFeeRates(row.feeTier).taker)\n  }, {\n    title: 'Maker',\n    dataIndex: 'maker',\n    key: 'maker',\n    render: (feeTier, row) => percentFormat.format(getFeeRates(row.feeTier).maker)\n  }, {\n    title: 'Requirements',\n    dataIndex: 'requirements',\n    key: 'requirements',\n    render: (_, row) => /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, !row.balance ? 'None' : `â‰¥ ${row.balance} ${row.token}`)\n  }];\n  return /*#__PURE__*/React.createElement(DataTable, {\n    dataSource: dataSource.map(info => ({ ...info,\n      key: info.feeTier\n    })),\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/Gianni/Desktop/serum-dex-ui/src/components/UserInfoTable/FeesTable.js"],"names":["React","Row","Col","Typography","Tag","useFeeDiscountKeys","DataTable","TokenInstructions","getFeeRates","percentFormat","FeesTable","feeAccounts","columns","title","dataIndex","key","render","feeTier","row","display","index","marginLeft","fontWeight","format","taker","maker","pubkey","toBase58","_","mint","equals","SRM_MINT","MSRM_MINT","dataSource","map","account","marginTop","FeeScheduleTable","token","balance","info"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Typography, Tag } from 'antd';\nimport { useFeeDiscountKeys } from '../../utils/markets';\nimport DataTable from '../layout/DataTable';\nimport { TokenInstructions, getFeeRates } from '@project-serum/serum';\nimport { percentFormat } from '../../utils/utils';\n\nexport default function FeesTable() {\n  const [feeAccounts] = useFeeDiscountKeys();\n\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n      render: (feeTier, row) => (\n        <div style={{ display: 'flex' }}>\n          <Typography>{feeTier}</Typography>\n          {row.index === 0 ? (\n            <div style={{ marginLeft: 10 }}>\n              <Tag color={'#41C77A'} style={{ fontWeight: 700 }}>\n                Selected\n              </Tag>\n            </div>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: `Public Key`,\n      dataIndex: 'pubkey',\n      key: 'pubkey',\n      render: (pubkey) => pubkey.toBase58(),\n    },\n    {\n      title: `Balance`,\n      dataIndex: 'balance',\n      key: 'balance',\n    },\n    {\n      title: `Mint`,\n      dataIndex: 'mint',\n      key: 'mint',\n      render: (_, row) =>\n        row.mint.equals(TokenInstructions.SRM_MINT)\n          ? 'SRM'\n          : row.mint.equals(TokenInstructions.MSRM_MINT)\n          ? 'MSRM'\n          : 'UNKNOWN',\n    },\n  ];\n\n  const dataSource = (feeAccounts || []).map((account, index) => ({\n    ...account,\n    index,\n    key: account.pubkey.toBase58(),\n  }));\n\n  return (\n    <>\n      <Row>\n        <Col span={24}>\n          <DataTable\n            dataSource={dataSource}\n            columns={columns}\n            pagination={true}\n            pageSize={5}\n            emptyLabel=\"No (M)SRM accounts\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ marginTop: 8 }}>\n        <Col>\n          <Typography>\n            Holding SRM or MSRM makes you eligible for fee discounts:\n          </Typography>\n          <FeeScheduleTable />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nfunction FeeScheduleTable() {\n  // Representation of serum-js/src/fees.ts\n  const dataSource = [\n    { feeTier: 0, taker: 0.0022, maker: -0.0003, token: '', balance: '' },\n    { feeTier: 1, taker: 0.002, maker: -0.0003, token: 'SRM', balance: 100 },\n    { feeTier: 2, taker: 0.0018, maker: -0.0003, token: 'SRM', balance: 1000 },\n    { feeTier: 3, taker: 0.0016, maker: -0.0003, token: 'SRM', balance: 10000 },\n    {\n      feeTier: 4,\n      taker: 0.0014,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 100000,\n    },\n    {\n      feeTier: 5,\n      taker: 0.0012,\n      maker: -0.0003,\n      token: 'SRM',\n      balance: 1000000,\n    },\n    { feeTier: 6, taker: 0.001, maker: -0.0005, token: 'MSRM', balance: 1 },\n  ];\n  const columns = [\n    {\n      title: 'Fee Tier',\n      dataIndex: 'feeTier',\n      key: 'feeTier',\n    },\n    {\n      title: 'Taker',\n      dataIndex: 'taker',\n      key: 'taker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).taker),\n    },\n    {\n      title: 'Maker',\n      dataIndex: 'maker',\n      key: 'maker',\n      render: (feeTier, row) =>\n        percentFormat.format(getFeeRates(row.feeTier).maker),\n    },\n    {\n      title: 'Requirements',\n      dataIndex: 'requirements',\n      key: 'requirements',\n      render: (_, row) => (\n        <Typography>\n          {!row.balance ? 'None' : `â‰¥ ${row.balance} ${row.token}`}\n        </Typography>\n      ),\n    },\n  ];\n  return (\n    <DataTable\n      dataSource={dataSource.map((info) => ({ ...info, key: info.feeTier }))}\n      columns={columns}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}