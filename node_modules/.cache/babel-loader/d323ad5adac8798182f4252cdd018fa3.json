{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Gianni/Desktop/serum-dex-ui/src/pages/pools/PoolPage/PoolInfoPanel.tsx\";\nimport { getPoolBasket } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\nconst {\n  Text,\n  Paragraph\n} = Typography;\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6\n});\nexport default function PoolInfoPanel({\n  poolInfo,\n  mintInfo\n}) {\n  const connection = useConnection();\n  const [totalBasket] = useAsyncData(() => getPoolBasket(connection, poolInfo, {\n    redeem: mintInfo.supply\n  }), tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo));\n  return /*#__PURE__*/React.createElement(FloatingElement, {\n    stretchVertical: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Name: \", poolInfo.state.name), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Address: \", /*#__PURE__*/React.createElement(Text, {\n    copyable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }\n  }, poolInfo.address.toBase58())), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Pool token mint address:\", ' ', /*#__PURE__*/React.createElement(Text, {\n    copyable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, poolInfo.state.poolTokenMint.toBase58())), poolInfo.state.adminKey ? /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Pool admin: \", /*#__PURE__*/React.createElement(Text, {\n    copyable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, poolInfo.state.adminKey.toBase58())) : null, /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Fee rate: \", feeFormat.format(poolInfo.state.feeRate / 1000000)), /*#__PURE__*/React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Total supply: \", mintInfo.supply.toNumber() / 10 ** mintInfo.decimals), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Total assets:\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PoolBasketDisplay, {\n    poolInfo: poolInfo,\n    basket: totalBasket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/mnt/c/Users/Gianni/Desktop/serum-dex-ui/src/pages/pools/PoolPage/PoolInfoPanel.tsx"],"names":["getPoolBasket","React","FloatingElement","Typography","useAsyncData","useConnection","tuple","PoolBasketDisplay","Text","Paragraph","feeFormat","Intl","NumberFormat","undefined","style","minimumFractionDigits","maximumFractionDigits","PoolInfoPanel","poolInfo","mintInfo","connection","totalBasket","redeem","supply","state","name","address","toBase58","poolTokenMint","adminKey","format","feeRate","toNumber","decimals"],"mappings":"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","sourcesContent":["import { getPoolBasket, PoolInfo } from '@project-serum/pool';\nimport React from 'react';\nimport FloatingElement from '../../../components/layout/FloatingElement';\nimport { Typography } from 'antd';\nimport { MintInfo } from '../../../utils/tokens';\nimport { useAsyncData } from '../../../utils/fetch-loop';\nimport { useConnection } from '../../../utils/connection';\nimport tuple from 'immutable-tuple';\nimport PoolBasketDisplay from './PoolBasketDisplay';\n\nconst { Text, Paragraph } = Typography;\n\ninterface PoolInfoProps {\n  poolInfo: PoolInfo;\n  mintInfo: MintInfo;\n}\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  style: 'percent',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 6,\n});\n\nexport default function PoolInfoPanel({ poolInfo, mintInfo }: PoolInfoProps) {\n  const connection = useConnection();\n\n  const [totalBasket] = useAsyncData(\n    () => getPoolBasket(connection, poolInfo, { redeem: mintInfo.supply }),\n    tuple(getPoolBasket, connection, poolInfo, 'total', mintInfo),\n  );\n\n  return (\n    <FloatingElement stretchVertical>\n      <Paragraph>Name: {poolInfo.state.name}</Paragraph>\n      <Paragraph>\n        Address: <Text copyable>{poolInfo.address.toBase58()}</Text>\n      </Paragraph>\n      <Paragraph>\n        Pool token mint address:{' '}\n        <Text copyable>{poolInfo.state.poolTokenMint.toBase58()}</Text>\n      </Paragraph>\n      {poolInfo.state.adminKey ? (\n        <Paragraph>\n          Pool admin: <Text copyable>{poolInfo.state.adminKey.toBase58()}</Text>\n        </Paragraph>\n      ) : null}\n      <Paragraph>\n        Fee rate: {feeFormat.format(poolInfo.state.feeRate / 1_000_000)}\n      </Paragraph>\n      <Paragraph>\n        Total supply: {mintInfo.supply.toNumber() / 10 ** mintInfo.decimals}\n      </Paragraph>\n      <Text>Total assets:</Text>\n      <div>\n        <PoolBasketDisplay poolInfo={poolInfo} basket={totalBasket} />\n      </div>\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}