{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Gianni/Desktop/serum-dex-ui/src/components/MintName.tsx\";\nimport React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nexport function MintName({\n  mint,\n  showAddress = false\n}) {\n  var _mintToTickers$mintAd;\n\n  const mintToTickers = useMintToTickers();\n\n  if (!mint) {\n    return null;\n  }\n\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = (_mintToTickers$mintAd = mintToTickers[mintAddress]) !== null && _mintToTickers$mintAd !== void 0 ? _mintToTickers$mintAd : abbreviateAddress(mintKey);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ticker, showAddress ? /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(Popover, {\n    content: /*#__PURE__*/React.createElement(LinkAddress, {\n      address: mintAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 22\n      }\n    }),\n    placement: \"bottomRight\",\n    title: \"Token mint\",\n    trigger: \"hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoCircleOutlined, {\n    style: {\n      color: '#2abdd2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }))) : null);\n}","map":{"version":3,"sources":["/mnt/c/Users/Gianni/Desktop/serum-dex-ui/src/components/MintName.tsx"],"names":["React","PublicKey","abbreviateAddress","useMintToTickers","Popover","LinkAddress","InfoCircleOutlined","MintName","mint","showAddress","mintToTickers","mintKey","mintAddress","toBase58","ticker","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,mBAAnC;AAEA,OAAO,SAASC,QAAT,CAAkB;AACvBC,EAAAA,IADuB;AAEvBC,EAAAA,WAAW,GAAG;AAFS,CAAlB,EAMJ;AAAA;;AACD,QAAMC,aAAa,GAAGP,gBAAgB,EAAtC;;AACA,MAAI,CAACK,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,QAAMG,OAAO,GAAG,OAAOH,IAAP,KAAgB,QAAhB,GAA2B,IAAIP,SAAJ,CAAcO,IAAd,CAA3B,GAAiDA,IAAjE;AACA,QAAMI,WAAW,GAAG,OAAOJ,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACK,QAAL,EAAtD;AACA,QAAMC,MAAM,4BAAGJ,aAAa,CAACE,WAAD,CAAhB,yEAAiCV,iBAAiB,CAACS,OAAD,CAA9D;AAEA,sBACE,0CACGG,MADH,EAEGL,WAAW,gBACV,0CACG,GADH,eAEE,oBAAC,OAAD;AACE,IAAA,OAAO,eAAE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAEE,IAAA,SAAS,EAAC,aAFZ;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,OAAO,EAAC,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADU,GAYR,IAdN,CADF;AAkBD","sourcesContent":["import React from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport { useMintToTickers } from '../utils/tokens';\nimport { Popover } from 'antd';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n\nexport function MintName({\n  mint,\n  showAddress = false,\n}: {\n  mint: string | PublicKey | null | undefined;\n  showAddress?: boolean;\n}) {\n  const mintToTickers = useMintToTickers();\n  if (!mint) {\n    return null;\n  }\n  const mintKey = typeof mint === 'string' ? new PublicKey(mint) : mint;\n  const mintAddress = typeof mint === 'string' ? mint : mint.toBase58();\n  const ticker = mintToTickers[mintAddress] ?? abbreviateAddress(mintKey);\n\n  return (\n    <>\n      {ticker}\n      {showAddress ? (\n        <>\n          {' '}\n          <Popover\n            content={<LinkAddress address={mintAddress} />}\n            placement=\"bottomRight\"\n            title=\"Token mint\"\n            trigger=\"hover\"\n          >\n            <InfoCircleOutlined style={{ color: '#2abdd2' }} />\n          </Popover>\n        </>\n      ) : null}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}