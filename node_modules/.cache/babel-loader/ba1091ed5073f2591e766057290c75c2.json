{"ast":null,"code":"var _jsxFileName = \"/mnt/c/users/gianni/desktop/cooperaty-app - copia/src/components/StandaloneBalancesDisplay.tsx\";\nimport { Button, Col, Row, Tooltip } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { useBalances, useMarket, useSelectedBaseCurrencyAccount, useSelectedOpenOrdersAccount, useSelectedQuoteCurrencyAccount, useTokenAccounts } from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { useInterval } from '../utils/useInterval';\nimport { useLocalStorageState } from '../utils/utils';\nimport { AUTO_SETTLE_DISABLED_OVERRIDE } from '../utils/preferences';\nimport { useReferrer } from '../utils/referrer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\nexport default function StandaloneBalancesDisplay() {\n  const {\n    baseCurrency,\n    quoteCurrency,\n    market\n  } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const {\n    providerUrl,\n    providerName,\n    wallet,\n    connected\n  } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances = balances && balances.find(b => b.coin === baseCurrency);\n  const quoteCurrencyBalances = balances && balances.find(b => b.coin === quoteCurrency);\n  const [autoSettleEnabled] = useLocalStorageState('autoSettleEnabled', true);\n  const [lastSettledAt, setLastSettledAt] = useState(0);\n  const {\n    usdcRef,\n    usdtRef\n  } = useReferrer();\n\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error'\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error'\n      });\n      return;\n    }\n\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error'\n      });\n      return;\n    }\n\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error'\n      });\n      return;\n    }\n\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error'\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n        usdcRef,\n        usdtRef\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error'\n      });\n    }\n  }\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      if (AUTO_SETTLE_DISABLED_OVERRIDE || !wallet || !market || !openOrdersAccount || !baseCurrencyAccount || !quoteCurrencyAccount || !autoSettleEnabled) {\n        return;\n      }\n\n      if (!(baseCurrencyBalances === null || baseCurrencyBalances === void 0 ? void 0 : baseCurrencyBalances.unsettled) && !(quoteCurrencyBalances === null || quoteCurrencyBalances === void 0 ? void 0 : quoteCurrencyBalances.unsettled)) {\n        return;\n      }\n\n      if (Date.now() - lastSettledAt < 15000) {\n        return;\n      }\n\n      try {\n        console.log('Settling funds...');\n        setLastSettledAt(Date.now());\n        await settleFunds({\n          market,\n          openOrders: openOrdersAccount,\n          connection,\n          wallet,\n          baseCurrencyAccount,\n          quoteCurrencyAccount,\n          usdcRef,\n          usdtRef\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n\n      console.log('Finished settling funds.');\n    };\n\n    connected && (wallet === null || wallet === void 0 ? void 0 : wallet.autoApprove) && autoSettleEnabled && autoSettle();\n  }, 1000);\n  const formattedBalances = [[baseCurrency, baseCurrencyBalances, 'base', market === null || market === void 0 ? void 0 : market.baseMintAddress.toBase58()], [quoteCurrency, quoteCurrencyBalances, 'quote', market === null || market === void 0 ? void 0 : market.quoteMintAddress.toBase58()]];\n  const arreglo = [{\n    \"exercise_id\": \"BTCUSDT0101202004001M4H\",\n    \"pair\": \"BTC-USD\",\n    \"resp\": true,\n    \"date\": \"2021-07-19T21:37:07.941857\"\n  }, {\n    \"exercise_id\": \"BTCUSDT0101202004001M4H\",\n    \"pair\": \"BTC-USD\",\n    \"resp\": false,\n    \"date\": \"2021-07-19T21:37:07.941857\"\n  }]; //var rp = require('request-promise').defaults({ json: true })\n\n  const wal = \"wallet1\";\n  const data = {\n    \"historial\": [{\n      \"date\": \"2021-07-20T16:34:23.639080\",\n      \"exercise_id\": \"TLMUSDT0101202004003M4H\",\n      \"pair\": \"TLM-USD\",\n      \"resp\": true\n    }, {\n      \"date\": \"2021-07-20T16:34:22.138967\",\n      \"exercise_id\": \"SOLUSDT0101202004002M5H\",\n      \"pair\": \"SOL-USD\",\n      \"resp\": true\n    }, {\n      \"date\": \"2021-07-20T16:34:21.638351\",\n      \"exercise_id\": \"ETHUSDT0101202004001M8H\",\n      \"pair\": \"ETH-USD\",\n      \"resp\": false\n    }, {\n      \"date\": \"2021-07-20T16:34:21.137740\",\n      \"exercise_id\": \"BTCUSDT0101202004001M4H\",\n      \"pair\": \"BTC-USD\",\n      \"resp\": true\n    }],\n    \"stats\": {\n      \"correct_answers\": 3,\n      \"last_attemp_date\": \"2021-07-20T16:34:23.137740\",\n      \"performance\": 75.0,\n      \"total_attemps\": 4\n    }\n  };\n  /*var data = rp({\n    url: \"http://3.235.184.95:4000/wallet?wallet=wallet1\"\n  }).then(function(response){ return response.json(); })\n    .then(data => {\n        historial = data.historial.map(el => {\n          return {\n            exercise_id: el.exercise_id,\n            pair: el.pair,\n            resp: el.resp,\n            date: el.date,\n          }\n        })\n        datos1 = \n          {\n            correct_answers: data.stats.correct_answers,\n            last_attemp_date: data.stats.last_attemp_date,\n            performance: data.stats.performance,\n            total_attemps: data.stats.total_attemps,\n          }\n        return datos1\n      \n    })\n    console.log(data) */\n\n  const date2 = new Date(data.stats.last_attemp_date);\n  const dformat2 = (\"00\" + date2.getDate()).slice(-2) + \"/\" + (\"00\" + (date2.getMonth() + 1)).slice(-2) + \"/\" + date2.getFullYear() + \" \" + (\"00\" + date2.getHours()).slice(-2) + \":\" + (\"00\" + date2.getMinutes()).slice(-2) + \":\" + (\"00\" + date2.getSeconds()).slice(-2);\n  return /*#__PURE__*/React.createElement(FloatingElement, {\n    style: {\n      flex: 1,\n      paddingTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowBox, {\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, \" Escoja una opci\\xF3n\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"bottomLeft\",\n    title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1ce6d2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faInfoCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 14\n    }\n  }, \" Total intentos: \", data.stats.total_attemps), \" \"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 14\n    }\n  }, \" Respuestas correctas: \", data.stats.correct_answers), \" \"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 14\n    }\n  }, \" Desempe\\xF1o: \", data.stats.performance, \" % \"), \" \"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 14\n    }\n  }, \" Ultimo intento: \", dformat2, \"  \"), \" \"), data.historial.map(e => {\n    const date = new Date(e.date);\n    const dformat = (\"00\" + date.getDate()).slice(-2) + \"/\" + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"/\" + date.getFullYear() + \" \" + (\"00\" + date.getHours()).slice(-2) + \":\" + (\"00\" + date.getMinutes()).slice(-2) + \":\" + (\"00\" + date.getSeconds()).slice(-2);\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      flex: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, e.resp == true ? /*#__PURE__*/React.createElement(CheckCircleOutlined, {\n      style: {\n        color: '#02bf76'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 47\n      }\n    }) : /*#__PURE__*/React.createElement(CloseCircleOutlined, {\n      style: {\n        color: '#f23b69'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      flex: 0.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 30\n      }\n    }, e.pair), \" \"), /*#__PURE__*/React.createElement(Col, {\n      flex: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 28\n      }\n    }, \"Fecha: \", dformat)));\n  }));\n}","map":{"version":3,"sources":["/mnt/c/users/gianni/desktop/cooperaty-app - copia/src/components/StandaloneBalancesDisplay.tsx"],"names":["Button","Col","Row","Tooltip","React","useState","FloatingElement","styled","CheckCircleOutlined","CloseCircleOutlined","useBalances","useMarket","useSelectedBaseCurrencyAccount","useSelectedOpenOrdersAccount","useSelectedQuoteCurrencyAccount","useTokenAccounts","useWallet","settleFunds","useSendConnection","notify","useInterval","useLocalStorageState","AUTO_SETTLE_DISABLED_OVERRIDE","useReferrer","FontAwesomeIcon","faInfoCircle","RowBox","Tip","p","ActionButton","StandaloneBalancesDisplay","baseCurrency","quoteCurrency","market","balances","openOrdersAccount","connection","providerUrl","providerName","wallet","connected","baseOrQuote","setBaseOrQuote","baseCurrencyAccount","quoteCurrencyAccount","tokenAccounts","baseCurrencyBalances","find","b","coin","quoteCurrencyBalances","autoSettleEnabled","lastSettledAt","setLastSettledAt","usdcRef","usdtRef","onSettleFunds","message","description","type","openOrders","e","autoSettle","unsettled","Date","now","console","log","autoApprove","formattedBalances","baseMintAddress","toBase58","quoteMintAddress","arreglo","wal","data","date2","stats","last_attemp_date","dformat2","getDate","slice","getMonth","getFullYear","getHours","getMinutes","getSeconds","flex","paddingTop","display","justifyContent","alignItems","color","total_attemps","correct_answers","performance","historial","map","date","dformat","resp","pair"],"mappings":"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","sourcesContent":["import { Button, Col, Divider, Popover, Row, Tooltip } from 'antd';\nimport React, { useState } from 'react';\nimport FloatingElement from './layout/FloatingElement';\nimport styled from 'styled-components';\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n  useBalances,\n  useMarket,\n  useSelectedBaseCurrencyAccount,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useTokenAccounts,\n} from '../utils/markets';\nimport DepositDialog from './DepositDialog';\nimport { useWallet } from '../utils/wallet';\nimport Link from './Link';\nimport { settleFunds } from '../utils/send';\nimport { useSendConnection } from '../utils/connection';\nimport { notify } from '../utils/notifications';\nimport { Balances } from '../utils/types';\nimport StandaloneTokenAccountsSelect from './StandaloneTokenAccountSelect';\nimport LinkAddress from './LinkAddress';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { useInterval } from '../utils/useInterval';\nimport { useLocalStorageState } from '../utils/utils';\nimport { AUTO_SETTLE_DISABLED_OVERRIDE } from '../utils/preferences';\nimport { useReferrer } from '../utils/referrer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\n\nconst Tip = styled.p`\n  font-size: 12px;\n  padding-top: 6px;\n`;\n\nconst ActionButton = styled(Button)`\n  color: #2abdd2;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nexport default function StandaloneBalancesDisplay() {\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const balances = useBalances();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const connection = useSendConnection();\n  const { providerUrl, providerName, wallet, connected } = useWallet();\n  const [baseOrQuote, setBaseOrQuote] = useState('');\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const [tokenAccounts] = useTokenAccounts();\n  const baseCurrencyBalances =\n    balances && balances.find((b) => b.coin === baseCurrency);\n  const quoteCurrencyBalances =\n    balances && balances.find((b) => b.coin === quoteCurrency);\n  const [autoSettleEnabled] = useLocalStorageState('autoSettleEnabled', true);\n  const [lastSettledAt, setLastSettledAt] = useState<number>(0);\n  const { usdcRef, usdtRef } = useReferrer();\n  async function onSettleFunds() {\n    if (!wallet) {\n      notify({\n        message: 'Wallet not connected',\n        description: 'wallet is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    if (!market) {\n      notify({\n        message: 'Error settling funds',\n        description: 'market is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!openOrdersAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!baseCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n    if (!quoteCurrencyAccount) {\n      notify({\n        message: 'Error settling funds',\n        description: 'Open orders account is undefined',\n        type: 'error',\n      });\n      return;\n    }\n\n    try {\n      await settleFunds({\n        market,\n        openOrders: openOrdersAccount,\n        connection,\n        wallet,\n        baseCurrencyAccount,\n        quoteCurrencyAccount,\n        usdcRef,\n        usdtRef,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error settling funds',\n        description: e.message,\n        type: 'error',\n      });\n    }\n  }\n\n  useInterval(() => {\n    const autoSettle = async () => {\n      if (\n        AUTO_SETTLE_DISABLED_OVERRIDE ||\n        !wallet ||\n        !market ||\n        !openOrdersAccount ||\n        !baseCurrencyAccount ||\n        !quoteCurrencyAccount ||\n        !autoSettleEnabled\n      ) {\n        return;\n      }\n      if (\n        !baseCurrencyBalances?.unsettled &&\n        !quoteCurrencyBalances?.unsettled\n      ) {\n        return;\n      }\n      if (Date.now() - lastSettledAt < 15000) {\n        return;\n      }\n      try {\n        console.log('Settling funds...');\n        setLastSettledAt(Date.now());\n        await settleFunds({\n          market,\n          openOrders: openOrdersAccount,\n          connection,\n          wallet,\n          baseCurrencyAccount,\n          quoteCurrencyAccount,\n          usdcRef,\n          usdtRef,\n        });\n      } catch (e) {\n        console.log('Error auto settling funds: ' + e.message);\n        return;\n      }\n      console.log('Finished settling funds.');\n    };\n    connected && wallet?.autoApprove && autoSettleEnabled && autoSettle();\n  }, 1000);\n\n  const formattedBalances: [\n    string | undefined,\n    Balances | undefined,\n    string,\n    string | undefined,\n  ][] = [\n      [\n        baseCurrency,\n        baseCurrencyBalances,\n        'base',\n        market?.baseMintAddress.toBase58(),\n      ],\n      [\n        quoteCurrency,\n        quoteCurrencyBalances,\n        'quote',\n        market?.quoteMintAddress.toBase58(),\n      ],\n    ];\n  const arreglo = [\n    {\n      \"exercise_id\": \"BTCUSDT0101202004001M4H\",\n      \"pair\": \"BTC-USD\",\n      \"resp\": true,\n      \"date\": \"2021-07-19T21:37:07.941857\"\n    },\n    {\n      \"exercise_id\": \"BTCUSDT0101202004001M4H\",\n      \"pair\": \"BTC-USD\",\n      \"resp\": false,\n      \"date\": \"2021-07-19T21:37:07.941857\"\n    }\n  ]\n  //var rp = require('request-promise').defaults({ json: true })\n\n  const wal = \"wallet1\"\n\n  const data = {\"historial\": [\n    {\n        \"date\": \"2021-07-20T16:34:23.639080\",\n        \"exercise_id\": \"TLMUSDT0101202004003M4H\",\n        \"pair\": \"TLM-USD\",\n        \"resp\": true\n    },\n    {\n        \"date\": \"2021-07-20T16:34:22.138967\",\n        \"exercise_id\": \"SOLUSDT0101202004002M5H\",\n        \"pair\": \"SOL-USD\",\n        \"resp\": true\n    },\n    {\n        \"date\": \"2021-07-20T16:34:21.638351\",\n        \"exercise_id\": \"ETHUSDT0101202004001M8H\",\n        \"pair\": \"ETH-USD\",\n        \"resp\": false\n    },\n    {\n        \"date\": \"2021-07-20T16:34:21.137740\",\n        \"exercise_id\": \"BTCUSDT0101202004001M4H\",\n        \"pair\": \"BTC-USD\",\n        \"resp\": true\n    }\n],\n\"stats\": {\n    \"correct_answers\": 3,\n    \"last_attemp_date\": \"2021-07-20T16:34:23.137740\",\n    \"performance\": 75.0,\n    \"total_attemps\": 4\n}}\n  /*var data = rp({\n    url: \"http://3.235.184.95:4000/wallet?wallet=wallet1\"\n  }).then(function(response){ return response.json(); })\n    .then(data => {\n        historial = data.historial.map(el => {\n          return {\n            exercise_id: el.exercise_id,\n            pair: el.pair,\n            resp: el.resp,\n            date: el.date,\n          }\n        })\n        datos1 = \n          {\n            correct_answers: data.stats.correct_answers,\n            last_attemp_date: data.stats.last_attemp_date,\n            performance: data.stats.performance,\n            total_attemps: data.stats.total_attemps,\n          }\n        return datos1\n      \n    })\n    console.log(data) */\n    const date2 = new Date(data.stats.last_attemp_date)\n    const dformat2 =\n        (\"00\" + date2.getDate()).slice(-2) + \"/\" +\n        (\"00\" + (date2.getMonth() + 1)).slice(-2) + \"/\" +\n        date2.getFullYear() + \" \" +\n        (\"00\" + date2.getHours()).slice(-2) + \":\" +\n        (\"00\" + date2.getMinutes()).slice(-2) + \":\" +\n        (\"00\" + date2.getSeconds()).slice(-2);\n  return (\n    <FloatingElement style={{ flex: 1, paddingTop: 10 }}>\n      <RowBox  justify=\"space-around\">\n        <div>\n          <h1> Escoja una opción</h1>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'flex-end', alignItems:'center'}}>\n          <Tooltip \n          placement=\"bottomLeft\"\n          title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\">\n              <span style={{color: \"#1ce6d2\"}}>\n                <FontAwesomeIcon size='lg' icon={faInfoCircle} />\n              </span>\n          </Tooltip>\n        </div>\n      </RowBox>\n      \n      <Row > <p> Total intentos: {data.stats.total_attemps}</p> </Row>\n      <Row > <p> Respuestas correctas: {data.stats.correct_answers}</p> </Row>\n      <Row > <p> Desempeño: {data.stats.performance} % </p> </Row>\n      <Row > <p> Ultimo intento: {dformat2}  </p> </Row>\n\n      {data.historial.map((e) => {\n\n        const date = new Date(e.date)\n        const dformat =\n          (\"00\" + date.getDate()).slice(-2) + \"/\" +\n          (\"00\" + (date.getMonth() + 1)).slice(-2) + \"/\" +\n          date.getFullYear() + \" \" +\n          (\"00\" + date.getHours()).slice(-2) + \":\" +\n          (\"00\" + date.getMinutes()).slice(-2) + \":\" +\n          (\"00\" + date.getSeconds()).slice(-2);\n        return (\n          <Row>\n            <Col flex={0.5}>{e.resp == true ? <CheckCircleOutlined style={{ color: '#02bf76' }} /> :\n              <CloseCircleOutlined style={{ color: '#f23b69' }} />}</Col>\n            <Col flex={0.5}> <p>{e.pair}</p> </Col>\n            <Col flex={4}> <p>Fecha: {dformat}</p></Col>\n          </Row>\n        )\n      })}\n\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}