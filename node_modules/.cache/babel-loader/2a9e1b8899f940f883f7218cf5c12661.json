{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Gianni/Desktop/cooperaty-app/src/components/UserInfoTable/OpenOrderTable.tsx\";\nimport React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter\n}) {\n  let {\n    wallet\n  } = useWallet();\n  let connection = useSendConnection();\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order === null || order === void 0 ? void 0 : order.orderId);\n\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error'\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [...new Set((openOrders || []).map(orderInfos => orderInfos.marketName))].map(marketName => {\n    return {\n      text: marketName,\n      value: marketName\n    };\n  });\n  const columns = [{\n    title: 'Market',\n    dataIndex: 'marketName',\n    key: 'marketName',\n    filters: marketFilter ? marketFilters : undefined,\n    onFilter: (value, record) => record.marketName.indexOf(value) === 0\n  }, {\n    title: 'Side',\n    dataIndex: 'side',\n    key: 'side',\n    render: side => /*#__PURE__*/React.createElement(Tag, {\n      color: side === 'buy' ? '#41C77A' : '#F23B69',\n      style: {\n        fontWeight: 700\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, side.charAt(0).toUpperCase() + side.slice(1)),\n    sorter: (a, b) => {\n      if (a.side === b.side) {\n        return 0;\n      } else if (a.side === 'buy') {\n        return 1;\n      } else {\n        return -1;\n      }\n    },\n    showSorterTooltip: false\n  }, {\n    title: 'Size',\n    dataIndex: 'size',\n    key: 'size',\n    sorter: (a, b) => b.size - a.size,\n    showSorterTooltip: false\n  }, {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price',\n    sorter: (a, b) => b.price - a.price,\n    showSorterTooltip: false\n  }, {\n    key: 'orderId',\n    render: order => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CancelButton, {\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }),\n      onClick: () => cancel(order),\n      loading: cancelId + '' === (order === null || order === void 0 ? void 0 : order.orderId) + '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))\n  }];\n  const dataSource = (openOrders || []).map(order => ({ ...order,\n    key: order.orderId\n  }));\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    emptyLabel: \"No open orders\",\n    dataSource: dataSource,\n    columns: columns,\n    pagination: true,\n    pageSize: pageSize ? pageSize : 5,\n    loading: loading !== undefined && loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/mnt/c/Users/Gianni/Desktop/cooperaty-app/src/components/UserInfoTable/OpenOrderTable.tsx"],"names":["React","useState","DataTable","styled","Button","Col","Row","Tag","cancelOrder","useWallet","useSendConnection","notify","DeleteOutlined","CancelButton","OpenOrderTable","openOrders","onCancelSuccess","pageSize","loading","marketFilter","wallet","connection","cancelId","setCancelId","cancel","order","orderId","market","e","message","description","type","marketFilters","Set","map","orderInfos","marketName","text","value","columns","title","dataIndex","key","filters","undefined","onFilter","record","indexOf","render","side","fontWeight","charAt","toUpperCase","slice","sorter","a","b","showSorterTooltip","size","price","textAlign","dataSource"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DataTable from '../layout/DataTable';\n\nimport styled from 'styled-components';\nimport { Button, Col, Row, Tag } from 'antd';\nimport { cancelOrder } from '../../utils/send';\nimport { useWallet } from '../../utils/wallet';\nimport { useSendConnection } from '../../utils/connection';\nimport { notify } from '../../utils/notifications';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { OrderWithMarketAndMarketName } from '../../utils/types';\n\nconst CancelButton = styled(Button)`\n  color: #f23b69;\n  border: 1px solid #f23b69;\n`;\n\nexport default function OpenOrderTable({\n  openOrders,\n  onCancelSuccess,\n  pageSize,\n  loading,\n  marketFilter,\n}: {\n  openOrders: OrderWithMarketAndMarketName[] | null | undefined;\n  onCancelSuccess?: () => void;\n  pageSize?: number;\n  loading?: boolean;\n  marketFilter?: boolean;\n}) {\n  let { wallet } = useWallet();\n  let connection = useSendConnection();\n\n  const [cancelId, setCancelId] = useState(null);\n\n  async function cancel(order) {\n    setCancelId(order?.orderId);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await cancelOrder({\n        order,\n        market: order.market,\n        connection,\n        wallet,\n      });\n    } catch (e) {\n      notify({\n        message: 'Error cancelling order',\n        description: e.message,\n        type: 'error',\n      });\n      return;\n    } finally {\n      setCancelId(null);\n    }\n    onCancelSuccess && onCancelSuccess();\n  }\n\n  const marketFilters = [\n    ...new Set((openOrders || []).map((orderInfos) => orderInfos.marketName)),\n  ].map((marketName) => {\n    return { text: marketName, value: marketName };\n  });\n\n  const columns = [\n    {\n      title: 'Market',\n      dataIndex: 'marketName',\n      key: 'marketName',\n      filters: marketFilter ? marketFilters : undefined,\n      onFilter: (value, record) => record.marketName.indexOf(value) === 0,\n    },\n    {\n      title: 'Side',\n      dataIndex: 'side',\n      key: 'side',\n      render: (side) => (\n        <Tag\n          color={side === 'buy' ? '#41C77A' : '#F23B69'}\n          style={{ fontWeight: 700 }}\n        >\n          {side.charAt(0).toUpperCase() + side.slice(1)}\n        </Tag>\n      ),\n      sorter: (a, b) => {\n        if (a.side === b.side) {\n          return 0;\n        } else if (a.side === 'buy') {\n          return 1;\n        } else {\n          return -1;\n        }\n      },\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      sorter: (a, b) => b.size - a.size,\n      showSorterTooltip: false,\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n      sorter: (a, b) => b.price - a.price,\n      showSorterTooltip: false,\n    },\n    {\n      key: 'orderId',\n      render: (order) => (\n        <div style={{ textAlign: 'right' }}>\n          <CancelButton\n            icon={<DeleteOutlined />}\n            onClick={() => cancel(order)}\n            loading={cancelId + '' === order?.orderId + ''}\n          >\n            Cancel\n          </CancelButton>\n        </div>\n      ),\n    },\n  ];\n  const dataSource = (openOrders || []).map((order) => ({\n    ...order,\n    key: order.orderId,\n  }));\n\n  return (\n    <Row>\n      <Col span={24}>\n        <DataTable\n          emptyLabel=\"No open orders\"\n          dataSource={dataSource}\n          columns={columns}\n          pagination={true}\n          pageSize={pageSize ? pageSize : 5}\n          loading={loading !== undefined && loading}\n        />\n      </Col>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}