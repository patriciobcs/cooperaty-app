{"ast":null,"code":"var _jsxFileName = \"/mnt/c/users/gianni/desktop/cooperaty-app - copia/src/components/TradeForm.tsx\";\nimport { Button, Row, Col, Tooltip } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useFeeDiscountKeys, useLocallyStoredFeeDiscountKey, useMarket, useMarkPrice, useSelectedBaseCurrencyAccount, useSelectedBaseCurrencyBalances, useSelectedOpenOrdersAccount, useSelectedQuoteCurrencyAccount, useSelectedQuoteCurrencyBalances } from '../utils/markets';\nimport { useWallet } from '../utils/wallet';\nimport { notify } from '../utils/notifications';\nimport { floorToDecimal, getDecimalCount, roundToDecimal } from '../utils/utils';\nimport { useSendConnection } from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport { getUnixTs, placeOrder } from '../utils/send';\nimport { refreshCache } from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\nconst ActionButton = styled(Button)`\n  color: #f23b69;\n  background-color: #212734;\n  border-width: 0px;\n`;\nconst ActionButton2 = styled(Button)`\n  color: #02bf76;\n  background-color: #212734;\n  border-width: 0px;\n`;\nconst ActionButton3 = styled(Button)`\n  color: #868f92;\n  background-color: #212734;\n  border-width: 0px;\n`;\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%'\n};\nexport default function TradeForm({\n  style,\n  setChangeOrderRef\n}) {\n  const [side, setSide] = useState('buy');\n  const {\n    baseCurrency,\n    quoteCurrency,\n    market\n  } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const {\n    wallet,\n    connected\n  } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey\n  } = useLocallyStoredFeeDiscountKey();\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState(undefined);\n  const [quoteSize, setQuoteSize] = useState(undefined);\n  const [price, setPrice] = useState(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n  const availableQuote = openOrdersAccount && market ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree) : 0;\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount = (market === null || market === void 0 ? void 0 : market.minOrderSize) && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = (market === null || market === void 0 ? void 0 : market.tickSize) && getDecimalCount(market.tickSize);\n  const publicKey = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey;\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n  useEffect(() => {\n    updateSizeFraction(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await (market === null || market === void 0 ? void 0 : market.findOpenOrdersAccountsForOwner(sendConnection, publicKey));\n        await (market === null || market === void 0 ? void 0 : market.findBestFeeDiscountKey(sendConnection, publicKey));\n        const endTime = getUnixTs();\n        console.log(`Finished refreshing accounts for ${market.address} after ${endTime - startTime}`);\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, publicKey]);\n\n  const onSetBaseSize = baseSize => {\n    setBaseSize(baseSize);\n\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n\n    let usePrice = price || markPrice;\n\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize = baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = quoteSize => {\n    setQuoteSize(quoteSize);\n\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n\n    let usePrice = price || markPrice;\n\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize = side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min((baseSize || 0) / maxSize * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = value => {\n    if (!price && markPrice) {\n      let formattedMarkPrice = priceDecimalCount ? markPrice.toFixed(priceDecimalCount) : markPrice;\n      setPrice(typeof formattedMarkPrice === 'number' ? formattedMarkPrice : parseFloat(formattedMarkPrice));\n    }\n\n    let newSize;\n\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = quoteBalance / (price || markPrice || 1) * value / 100;\n      }\n    } else {\n      newSize = baseBalance * value / 100;\n    } // round down to minOrderSize increment\n\n\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange = checked => {\n    if (checked) {\n      setIoc(false);\n    }\n\n    setPostOnly(checked);\n  };\n\n  const iocOnChange = checked => {\n    if (checked) {\n      setPostOnly(false);\n    }\n\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error'\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error'\n      });\n      return;\n    }\n\n    setSubmitting(true);\n\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount === null || baseCurrencyAccount === void 0 ? void 0 : baseCurrencyAccount.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount === null || quoteCurrencyAccount === void 0 ? void 0 : quoteCurrencyAccount.pubkey,\n        feeDiscountPubkey: feeDiscountKey\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error'\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(FloatingElement, {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      ...style\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RowBox, {\n    align: \"middle\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, \" Escoja una opci\\xF3n\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"lbottomLeft\",\n    title: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1ce6d2\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faInfoCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBox, {\n    align: \"middle\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton2, {\n    block: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, \"Sube\")), /*#__PURE__*/React.createElement(Col, {\n    style: {\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton, {\n    block: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }\n  }, \"Baja\"))), /*#__PURE__*/React.createElement(RowBox, {\n    align: \"middle\",\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      width: 325\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ActionButton3, {\n    block: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, \"Omitir\")))));\n}","map":{"version":3,"sources":["/mnt/c/users/gianni/desktop/cooperaty-app - copia/src/components/TradeForm.tsx"],"names":["Button","Row","Col","Tooltip","React","useEffect","useState","styled","useFeeDiscountKeys","useLocallyStoredFeeDiscountKey","useMarket","useMarkPrice","useSelectedBaseCurrencyAccount","useSelectedBaseCurrencyBalances","useSelectedOpenOrdersAccount","useSelectedQuoteCurrencyAccount","useSelectedQuoteCurrencyBalances","useWallet","notify","floorToDecimal","getDecimalCount","roundToDecimal","useSendConnection","FloatingElement","getUnixTs","placeOrder","refreshCache","tuple","FontAwesomeIcon","faInfoCircle","RowBox","ActionButton","ActionButton2","ActionButton3","sliderMarks","TradeForm","style","setChangeOrderRef","side","setSide","baseCurrency","quoteCurrency","market","baseCurrencyBalances","quoteCurrencyBalances","baseCurrencyAccount","quoteCurrencyAccount","openOrdersAccount","wallet","connected","sendConnection","markPrice","storedFeeDiscountKey","feeDiscountKey","postOnly","setPostOnly","ioc","setIoc","baseSize","setBaseSize","undefined","quoteSize","setQuoteSize","price","setPrice","submitting","setSubmitting","sizeFraction","setSizeFraction","availableQuote","quoteSplSizeToNumber","quoteTokenFree","quoteBalance","baseBalance","sizeDecimalCount","minOrderSize","priceDecimalCount","tickSize","publicKey","doChangeOrder","onSliderChange","updateSizeFraction","warmUpCache","console","log","startTime","address","findOpenOrdersAccountsForOwner","findBestFeeDiscountKey","endTime","e","id","setInterval","clearInterval","onSetBaseSize","usePrice","rawQuoteSize","onSetQuoteSize","rawBaseSize","size","formattedSize","formattedPrice","rawMaxSize","maxSize","Math","min","value","formattedMarkPrice","toFixed","parseFloat","newSize","formatted","postOnChange","checked","iocOnChange","onSubmit","warn","message","type","orderType","connection","pubkey","feeDiscountPubkey","description","display","flexDirection","justifyContent","alignItems","color","flex","width"],"mappings":"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","sourcesContent":["import {Button, Input, Radio, Slider, Switch, Row, Col, Tooltip } from 'antd';\nimport React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport {\n  useFeeDiscountKeys,\n  useLocallyStoredFeeDiscountKey,\n  useMarket,\n  useMarkPrice,\n  useSelectedBaseCurrencyAccount,\n  useSelectedBaseCurrencyBalances,\n  useSelectedOpenOrdersAccount,\n  useSelectedQuoteCurrencyAccount,\n  useSelectedQuoteCurrencyBalances,\n} from '../utils/markets';\nimport {useWallet} from '../utils/wallet';\nimport {notify} from '../utils/notifications';\nimport {floorToDecimal, getDecimalCount, roundToDecimal,} from '../utils/utils';\nimport {useSendConnection} from '../utils/connection';\nimport FloatingElement from './layout/FloatingElement';\nimport {getUnixTs, placeOrder} from '../utils/send';\nimport {SwitchChangeEventHandler} from 'antd/es/switch';\nimport {refreshCache} from '../utils/fetch-loop';\nimport tuple from 'immutable-tuple';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nconst RowBox = styled(Row)`\n  padding-bottom: 20px;\n`;\nconst ActionButton = styled(Button)`\n  color: #f23b69;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ActionButton2 = styled(Button)`\n  color: #02bf76;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst ActionButton3 = styled(Button)`\n  color: #868f92;\n  background-color: #212734;\n  border-width: 0px;\n`;\n\nconst sliderMarks = {\n  0: '0%',\n  25: '25%',\n  50: '50%',\n  75: '75%',\n  100: '100%',\n};\n\nexport default function TradeForm({\n  style,\n  setChangeOrderRef,\n}: {\n  style?: any;\n  setChangeOrderRef?: (\n    ref: ({ size, price }: { size?: number; price?: number }) => void,\n  ) => void;\n}) {\n  const [side, setSide] = useState<'buy' | 'sell'>('buy');\n  const { baseCurrency, quoteCurrency, market } = useMarket();\n  const baseCurrencyBalances = useSelectedBaseCurrencyBalances();\n  const quoteCurrencyBalances = useSelectedQuoteCurrencyBalances();\n  const baseCurrencyAccount = useSelectedBaseCurrencyAccount();\n  const quoteCurrencyAccount = useSelectedQuoteCurrencyAccount();\n  const openOrdersAccount = useSelectedOpenOrdersAccount(true);\n  const { wallet, connected } = useWallet();\n  const sendConnection = useSendConnection();\n  const markPrice = useMarkPrice();\n  useFeeDiscountKeys();\n  const {\n    storedFeeDiscountKey: feeDiscountKey,\n  } = useLocallyStoredFeeDiscountKey();\n\n  const [postOnly, setPostOnly] = useState(false);\n  const [ioc, setIoc] = useState(false);\n  const [baseSize, setBaseSize] = useState<number | undefined>(undefined);\n  const [quoteSize, setQuoteSize] = useState<number | undefined>(undefined);\n  const [price, setPrice] = useState<number | undefined>(undefined);\n  const [submitting, setSubmitting] = useState(false);\n  const [sizeFraction, setSizeFraction] = useState(0);\n\n  const availableQuote =\n    openOrdersAccount && market\n      ? market.quoteSplSizeToNumber(openOrdersAccount.quoteTokenFree)\n      : 0;\n\n  let quoteBalance = (quoteCurrencyBalances || 0) + (availableQuote || 0);\n  let baseBalance = baseCurrencyBalances || 0;\n  let sizeDecimalCount =\n    market?.minOrderSize && getDecimalCount(market.minOrderSize);\n  let priceDecimalCount = market?.tickSize && getDecimalCount(market.tickSize);\n\n  const publicKey = wallet?.publicKey;\n\n  useEffect(() => {\n    setChangeOrderRef && setChangeOrderRef(doChangeOrder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [setChangeOrderRef]);\n\n  useEffect(() => {\n    baseSize && price && onSliderChange(sizeFraction);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [side]);\n\n  useEffect(() => {\n    updateSizeFraction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [price, baseSize]);\n\n  useEffect(() => {\n    const warmUpCache = async () => {\n      try {\n        if (!wallet || !publicKey || !market) {\n          console.log(`Skipping refreshing accounts`);\n          return;\n        }\n        const startTime = getUnixTs();\n        console.log(`Refreshing accounts for ${market.address}`);\n        await market?.findOpenOrdersAccountsForOwner(sendConnection, publicKey);\n        await market?.findBestFeeDiscountKey(sendConnection, publicKey);\n        const endTime = getUnixTs();\n        console.log(\n          `Finished refreshing accounts for ${market.address} after ${\n            endTime - startTime\n          }`,\n        );\n      } catch (e) {\n        console.log(`Encountered error when refreshing trading accounts: ${e}`);\n      }\n    };\n    warmUpCache();\n    const id = setInterval(warmUpCache, 30_000);\n    return () => clearInterval(id);\n  }, [market, sendConnection, wallet, publicKey]);\n\n  const onSetBaseSize = (baseSize: number | undefined) => {\n    setBaseSize(baseSize);\n    if (!baseSize) {\n      setQuoteSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setQuoteSize(undefined);\n      return;\n    }\n    const rawQuoteSize = baseSize * usePrice;\n    const quoteSize =\n      baseSize && roundToDecimal(rawQuoteSize, sizeDecimalCount);\n    setQuoteSize(quoteSize);\n  };\n\n  const onSetQuoteSize = (quoteSize: number | undefined) => {\n    setQuoteSize(quoteSize);\n    if (!quoteSize) {\n      setBaseSize(undefined);\n      return;\n    }\n    let usePrice = price || markPrice;\n    if (!usePrice) {\n      setBaseSize(undefined);\n      return;\n    }\n    const rawBaseSize = quoteSize / usePrice;\n    const baseSize = quoteSize && roundToDecimal(rawBaseSize, sizeDecimalCount);\n    setBaseSize(baseSize);\n  };\n\n  const doChangeOrder = ({\n    size,\n    price,\n  }: {\n    size?: number;\n    price?: number;\n  }) => {\n    const formattedSize = size && roundToDecimal(size, sizeDecimalCount);\n    const formattedPrice = price && roundToDecimal(price, priceDecimalCount);\n    formattedSize && onSetBaseSize(formattedSize);\n    formattedPrice && setPrice(formattedPrice);\n  };\n\n  const updateSizeFraction = () => {\n    const rawMaxSize =\n      side === 'buy' ? quoteBalance / (price || markPrice || 1) : baseBalance;\n    const maxSize = floorToDecimal(rawMaxSize, sizeDecimalCount);\n    const sizeFraction = Math.min(((baseSize || 0) / maxSize) * 100, 100);\n    setSizeFraction(sizeFraction);\n  };\n\n  const onSliderChange = (value) => {\n    if (!price && markPrice) {\n      let formattedMarkPrice: number | string = priceDecimalCount\n        ? markPrice.toFixed(priceDecimalCount)\n        : markPrice;\n      setPrice(\n        typeof formattedMarkPrice === 'number'\n          ? formattedMarkPrice\n          : parseFloat(formattedMarkPrice),\n      );\n    }\n\n    let newSize;\n    if (side === 'buy') {\n      if (price || markPrice) {\n        newSize = ((quoteBalance / (price || markPrice || 1)) * value) / 100;\n      }\n    } else {\n      newSize = (baseBalance * value) / 100;\n    }\n\n    // round down to minOrderSize increment\n    let formatted = floorToDecimal(newSize, sizeDecimalCount);\n\n    onSetBaseSize(formatted);\n  };\n\n  const postOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setIoc(false);\n    }\n    setPostOnly(checked);\n  };\n  const iocOnChange: SwitchChangeEventHandler = (checked) => {\n    if (checked) {\n      setPostOnly(false);\n    }\n    setIoc(checked);\n  };\n\n  async function onSubmit() {\n    if (!price) {\n      console.warn('Missing price');\n      notify({\n        message: 'Missing price',\n        type: 'error',\n      });\n      return;\n    } else if (!baseSize) {\n      console.warn('Missing size');\n      notify({\n        message: 'Missing size',\n        type: 'error',\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    try {\n      if (!wallet) {\n        return null;\n      }\n\n      await placeOrder({\n        side,\n        price,\n        size: baseSize,\n        orderType: ioc ? 'ioc' : postOnly ? 'postOnly' : 'limit',\n        market,\n        connection: sendConnection,\n        wallet,\n        baseCurrencyAccount: baseCurrencyAccount?.pubkey,\n        quoteCurrencyAccount: quoteCurrencyAccount?.pubkey,\n        feeDiscountPubkey: feeDiscountKey,\n      });\n      refreshCache(tuple('getTokenAccounts', wallet, connected));\n      setPrice(undefined);\n      onSetBaseSize(undefined);\n    } catch (e) {\n      console.warn(e);\n      notify({\n        message: 'Error placing order',\n        description: e.message,\n        type: 'error',\n      });\n    } finally {\n      setSubmitting(false);\n    }\n  }\n  return (\n    <FloatingElement\n      style={{ display: 'flex', flexDirection: 'column', ...style }}\n    >\n      <RowBox align=\"middle\" justify=\"space-around\">\n        <div style={{display: 'flex',  justifyContent:'flex-start', alignItems:'center'}}>\n          <h1> Escoja una opción</h1>\n        </div>\n        <div style={{display: 'flex',  justifyContent:'flex-end', alignItems:'center'}}>\n          <Tooltip \n          placement=\"lbottomLeft\"\n          title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\">\n              <span style={{color: \"#1ce6d2\"}}>\n                <FontAwesomeIcon size='lg' icon={faInfoCircle} />\n              </span>\n          </Tooltip>\n        </div>\n      </RowBox>\n      <div style={{ flex: 1 }}>\n      <RowBox align=\"middle\" justify=\"space-around\">\n          <Col style={{ width: 150 }}>\n            <ActionButton2\n              block\n              size=\"large\"\n            >\n              Sube\n            </ActionButton2>\n          </Col>\n          <Col style={{ width: 150 }}>\n            <ActionButton block size=\"large\">\n              Baja\n            </ActionButton>\n          </Col>\n        </RowBox>\n        <RowBox align=\"middle\" justify=\"space-around\">\n          <Col style={{ width: 325 }}>\n            <ActionButton3 block size=\"large\">\n              Omitir\n            </ActionButton3>\n          </Col>\n        </RowBox>\n      </div>\n    </FloatingElement>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}